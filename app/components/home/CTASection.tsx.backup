import Link from 'next/link';
import Animated, {
  FadeIn,
  FadeInDown,
  useSharedValue,
  useAnimatedStyle,
  withSequence,
  withTiming,
  withDelay
} from 'react-native-reanimated';
import { useRef } from 'react';

const badges = [
  { icon: '‚ö°', text: 'Installation 5 min' },
  { icon: 'üîß', text: 'Support 24/7' },
  { icon: 'üéÅ', text: '3 mois Premium inclus' }
];

export const CTASection = (): React.ReactElement => {
  // Animation du CTA avec rebond
  const scale = useSharedValue(1);
  const ctaRef = useRef(null);
  const animatedStyle = useAnimatedStyle(() => ({
    transform: [{ scale: scale.value }],
  }));

  const handlePointerDown = () => {
    scale.value = withTiming(0.95, { duration: 100 });
  };
  const handlePointerUp = () => {
    scale.value = withSequence(
      withTiming(1.05, { duration: 120 }),
      withTiming(1, { duration: 120 })
    );
  };

  return (
    <section className="relative w-full bg-gradient-to-r from-indigo-600 to-purple-700 text-white overflow-hidden">
      {/* Fond d√©coratif */}
      <div className="absolute inset-0 opacity-10">
        <div className="absolute inset-0 bg-[url('/assets/images/grid.svg')] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]"></div>
      </div>
      <div className="container mx-auto px-4 py-16 sm:py-20 md:py-24">
        <div className="max-w-4xl mx-auto text-center">
          <Animated.View entering={FadeInDown.duration(800)}>
            <h2 className="text-3xl sm:text-4xl md:text-5xl font-bold mb-6">
              Pr√™t √† rejoindre la r√©volution Lightning ?
            </h2>
          </Animated.View>
          <Animated.View entering={FadeInDown.duration(600).delay(200)}>
            <p className="text-lg sm:text-xl md:text-2xl mb-8 text-indigo-100">
              Commencez aujourd'hui avec votre DazBox et d√©couvrez la puissance du r√©seau Lightning Network.
            </p>
          </Animated.View>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Animated.View
              entering={FadeIn.duration(400).delay(400)}
              style={animatedStyle}
              ref={ctaRef}
              onPointerDown={handlePointerDown}
              onPointerUp={handlePointerUp}
              onPointerLeave={handlePointerUp}
            >
              <Link
                href="/contact"
                className="inline-flex items-center justify-center px-8 py-4 text-lg font-semibold border-2 border-white text-white hover:bg-white/10 rounded-xl transition-all duration-200"
              >
                Parler √† un expert
              </Link>
            </Animated.View>
          </div>
          {/* Badges de confiance anim√©s en cascade */}
          <div className="mt-12 flex flex-wrap justify-center items-center gap-6">
            {badges.map((badge, index) => (
              <Animated.View
                key={badge.text}
                entering={FadeIn.duration(400).delay(600 + (index * 100))}
              >
                <div className="flex items-center bg-white/10 rounded-full px-4 py-2">
                  <span className="w-5 h-5 mr-2 text-yellow-400">{badge.icon}</span>
                  <span className="text-sm">{badge.text}</span>
                </div>
              </Animated.View>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
}; 